input {
  beats {
    port => 5044
  }
}

filter {
  if [fields][docType] == "mysqlslowlogs" {
    grok {
        match => [
          "message", "^#\s+User@Host:\s+%{USER:user}\[[^\]]+\]\s+@\s+(?:(?<clienthost>\S*) )?\[(?:%{IP:clientip})?\]\s+Id:\s+%{NUMBER:id}\n# Query_time: %{NUMBER:query_time}\s+Lock_time: %{NUMBER:lock_time}\s+Rows_sent: %{NUMBER:rows_sent}\s+Rows_examined: %{NUMBER:rows_examined}\nuse\s(?<dbname>\w+);\nSET\s+timestamp=%{NUMBER:timestamp_mysql};\n(?<query_str>[\s\S]*)",
          "message", "^#\s+User@Host:\s+%{USER:user}\[[^\]]+\]\s+@\s+(?:(?<clienthost>\S*) )?\[(?:%{IP:clientip})?\]\s+Id:\s+%{NUMBER:id}\n# Query_time: %{NUMBER:query_time}\s+Lock_time: %{NUMBER:lock_time}\s+Rows_sent: %{NUMBER:rows_sent}\s+Rows_examined: %{NUMBER:rows_examined}\nSET\s+timestamp=%{NUMBER:timestamp_mysql};\n(?<query_str>[\s\S]*)",
          "message", "^#\s+User@Host:\s+%{USER:user}\[[^\]]+\]\s+@\s+(?:(?<clienthost>\S*) )?\[(?:%{IP:clientip})?\]\n# Query_time: %{NUMBER:query_time}\s+Lock_time: %{NUMBER:lock_time}\s+Rows_sent: %{NUMBER:rows_sent}\s+Rows_examined: %{NUMBER:rows_examined}\nuse\s(?<dbname>\w+);\nSET\s+timestamp=%{NUMBER:timestamp_mysql};\n(?<query_str>[\s\S]*)",
          "message", "^#\s+User@Host:\s+%{USER:user}\[[^\]]+\]\s+@\s+(?:(?<clienthost>\S*) )?\[(?:%{IP:clientip})?\]\n# Query_time: %{NUMBER:query_time}\s+Lock_time: %{NUMBER:lock_time}\s+Rows_sent: %{NUMBER:rows_sent}\s+Rows_examined: %{NUMBER:rows_examined}\nSET\s+timestamp=%{NUMBER:timestamp_mysql};\n(?<query_str>[\s\S]*)"
        ]
    }
    date {
      match => ["timestamp_mysql","yyyy-MM-dd HH:mm:ss.SSS","UNIX"]
    }
    date {
      match => ["timestamp_mysql","yyyy-MM-dd HH:mm:ss.SSS","UNIX"]
      target => "timestamp"
    }
    mutate {
      convert => ["query_time", "float"]
      convert => ["lock_time", "float"]
      convert => ["rows_sent", "integer"]
      convert => ["rows_examined", "integer"]
      remove_field => "message"
      remove_field => "timestamp_mysql"
      remove_field => "@version"
    }
  }
  if [fields][docType] == "audit-log" {
    grok {
      patterns_dir => ["/usr/share/logstash/config/patterns"]
      match => {
        "message" => "%{MYWORD:id}\|%{MYWORD:parentId}\|%{GREEDYDATA:logName}\|%{USERNAME:logType}\|%{GREEDYDATA:operation}\|%{MYWORD:userId}\|%{MYWORD:userName}\|%{MYWORD:tenantId}\|%{MYWORD:traceId}\|%{MYWORD:runTime}\|%{TIMESTAMP_ISO8601:createTime}\|%{USERNAME:applicationName}\|%{MYTHREADNAME:className}\|%{MYWORD:methodName}\|%{MYWORD:requestIp}\|%{MYWORD:requestStatus}\|%{MYWORD:requestMethod}\|%{MYWORD:requestOs}\|%{MYWORD:requestBrowser}\|%{GREEDYDATA:requestArgs}\|%{GREEDYDATA:requestResult}\|%{GREEDYDATA:requestErrorMsg}"
      }
    }
    date {
      match => ["createTime","yyyy-MM-dd HH:mm:ss.SSS Z"]
    }
    date {
      match => ["createTime","yyyy-MM-dd HH:mm:ss.SSS"]
      target => "timestamp"
      locale => "en"
      timezone => "+08:00"
    }
    mutate {
      remove_field => "message"
      remove_field => "createTime"
      remove_field => "@version"
      remove_field => "host"
      remove_field => "offset"
    }
  }
}


output {
  if [fields][docType] == "audit-log" {
    elasticsearch {
      hosts => ["http://es:9200"]
      manage_template => false
      user => "elastic"
      password => "ed-cloud"
      index => "audit-log-%{+YYYY.MM.dd}"
      document_type => "%{[@metadata][type]}"
    }
  }
  if [fields][docType] == "mysqlslowlogs" {
      elasticsearch {
        hosts => ["http://es:9200"]
        user => "elastic"
        password => "ed-cloud"
        index => "mysql-slowlog-%{+YYYY.MM.dd}"
      }
  }
}

